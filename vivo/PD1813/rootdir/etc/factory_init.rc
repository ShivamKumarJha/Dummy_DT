# Copyright (C) 2012 The Android Open Source Project
#
# IMPORTANT: Do not create world writable files or directories.
# This is a common source of Android security bugs.
#
import ${ro.mtkrc.path}factory_init.connectivity.rc
import /init.environ.rc
import /vendor/etc/init/trustonic.rc
import ${ro.mtkrc.path}init.nvdata.rc
import /vendor/etc/init/microtrust.rc
import /vendor/etc/init/hw/init.aee.rc
import /vendor/etc/init/hw/factory_init.project.rc

on early-init
    # Set init and its forked children's oom_adj.
    write /proc/1/oom_score_adj -1000

    # Disable sysrq from keyboard
    write /proc/sys/kernel/sysrq 0

    # Set the security context of /adb_keys if present.
    restorecon /adb_keys

    # Shouldn't be necessary, but sdcard won't start without it. http://b/22568628.
    mkdir /mnt 0775 root system

    # Set the security context of /postinstall if present.
    restorecon /postinstall

    start ueventd

#INTERNAL_START
    mount debugfs debugfs /sys/kernel/debug
    chmod 0755 /sys/kernel/debug
#INTERNAL_END

on init

sysclktz 0

    # Mix device-specific information into the entropy pool
    copy /proc/cmdline /dev/urandom
    copy /default.prop /dev/urandom

    write /proc/bootprof "INIT: on init start"

    # Backward compatibility.
    symlink /system/etc /etc
    symlink /sys/kernel/debug /d

# Temp Backward compatibility
    symlink /dev/block/platform/bootdevice/by-name/boot /dev/bootimg
    symlink /dev/block/platform/bootdevice/by-name/recovery /dev/recovery
    symlink /dev/block/platform/bootdevice/by-name/secro  /dev/sec_ro
    symlink /dev/block/platform/bootdevice/by-name/kb /dev/kb
    symlink /dev/block/platform/bootdevice/by-name/dkb /dev/dkb
    symlink /dev/block/platform/bootdevice/by-name/seccfg /dev/seccfg
    symlink /dev/block/platform/bootdevice/by-name/proinfo /dev/pro_info
    symlink /dev/block/platform/bootdevice/by-name/nvram /dev/nvram
    symlink /dev/block/platform/bootdevice/by-name/para /dev/misc
    symlink /dev/block/platform/bootdevice/by-name/logo /dev/logo


# Link /vendor to /system/vendor for devices without a vendor partition.
    symlink /system/vendor /vendor

    # Mount cgroup mount point for cpu accounting
    mount cgroup none /acct cpuacct
    mkdir /acct/uid

    # Create energy-aware scheduler tuning nodes
    mkdir /dev/stune
    mount cgroup none /dev/stune schedtune
    mkdir /dev/stune/foreground
    chown system system /dev/stune
    chown system system /dev/stune/foreground
    chown system system /dev/stune/tasks
    chown system system /dev/stune/foreground/tasks
    chmod 0664 /dev/stune/tasks
    chmod 0664 /dev/stune/foreground/tasks

# Mount staging areas for devices managed by vold
    # See storage config details at http://source.android.com/tech/storage/
    mount tmpfs tmpfs /mnt mode=0755,uid=0,gid=1000
    restorecon_recursive /mnt
    # Support legacy paths
    symlink /sdcard /mnt/sdcard

    mount configfs none /config
    chmod 0775 /config/sdcardfs
    chown system package_info /config/sdcardfs

    mkdir /mnt/secure 0700 root root
    mkdir /mnt/secure/asec 0700 root root
    mkdir /mnt/asec 0755 root system
    mkdir /mnt/obb 0755 root system
    mkdir /mnt/media_rw 0750 root media_rw
    mkdir /mnt/user 0755 root root
    mkdir /mnt/user/0 0755 root root
    mkdir /mnt/expand 0771 system system
    mkdir /mnt/appfuse 0711 root root

    # Storage views to support runtime permissions
    mkdir /mnt/runtime 0700 root root
    mkdir /mnt/runtime/default 0755 root root
    mkdir /mnt/runtime/default/self 0755 root root
    mkdir /mnt/runtime/read 0755 root root
    mkdir /mnt/runtime/read/self 0755 root root
    mkdir /mnt/runtime/write 0755 root root
    mkdir /mnt/runtime/write/self 0755 root root

    # Symlink to keep legacy apps working in multi-user world
    symlink /storage/self/primary /sdcard
    symlink /storage/self/primary /mnt/sdcard
    symlink /mnt/user/0/primary /mnt/runtime/default/self/primary

    # root memory control cgroup, used by lmkd
    mkdir /dev/memcg 0700 root system
    mount cgroup none /dev/memcg memory
    # app mem cgroups, used by activity manager, lmkd and zygote
    mkdir /dev/memcg/apps/ 0755 system system

    write /proc/sys/kernel/panic_on_oops 1
    write /proc/sys/kernel/hung_task_timeout_secs 0
    write /proc/cpu/alignment 4

    # scheduler tunables
    # Disable auto-scaling of scheduler tunables with hotplug. The tunables
    # will vary across devices in unpredictable ways if allowed to scale with
    # cpu cores.
    write /proc/sys/kernel/sched_tunable_scaling 0
    write /proc/sys/kernel/sched_latency_ns 10000000
    write /proc/sys/kernel/sched_wakeup_granularity_ns 2000000
    write /proc/sys/kernel/sched_child_runs_first 0
    write /proc/sys/kernel/randomize_va_space 2
    write /proc/sys/vm/mmap_min_addr 32768
    write /proc/sys/net/ipv4/ping_group_range "0 2147483647"
    write /proc/sys/net/unix/max_dgram_qlen 600
    write /proc/sys/kernel/sched_rt_runtime_us 950000
    write /proc/sys/kernel/sched_rt_period_us 1000000
    # Assign reasonable ceiling values for socket rcv/snd buffers.
    # These should almost always be overridden by the target per the
    # the corresponding technology maximums.
    write /proc/sys/net/core/rmem_max  262144
    write /proc/sys/net/core/wmem_max  262144
    # reflect fwmark from incoming packets onto generated replies
    write /proc/sys/net/ipv4/fwmark_reflect 1
    write /proc/sys/net/ipv6/fwmark_reflect 1
    # set fwmark on accepted sockets
    write /proc/sys/net/ipv4/tcp_fwmark_accept 1
    # disable icmp redirects
    write /proc/sys/net/ipv4/conf/all/accept_redirects 0
    write /proc/sys/net/ipv6/conf/all/accept_redirects 0

    #INTERNAL_START
    mkdir /vendor/protect_f 0771 system system
    mkdir /vendor/protect_s 0771 system system
    #Create CIP mount point
    mkdir /custom

    mkdir /mnt/cd-rom 0000 system system
    #INTERNAL_END
    # enable armv8_deprecated instruction hooks
    write /proc/sys/abi/swp 1
    # Linux's execveat() syscall may construct paths containing /dev/fd
    # expecting it to point to /proc/self/fd
    symlink /proc/self/fd /dev/fd
    # set RLIMIT_NICE to allow priorities from 19 to -20
    setrlimit 13 40 40
    # Healthd can trigger a full boot from charger mode by signaling this
    # property when the power button is held.
    on property:sys.boot_from_charger_mode=1
    class_stop charger
    trigger late-init

# Load properties from /system/ + /factory after fs mount.
    on load_system_props_action
    load_system_props

    on load_persist_props_action
    load_persist_props
    start logd
    start logd-reinit

# Indicate to fw loaders that the relevant mounts are up.
on firmware_mounts_complete
    rm /dev/.booting

    # Mount filesystems and start core system services.
    on late-init
    trigger early-fs
    trigger fs
    trigger post-fs

    # Load properties from /system/ + /factory after fs mount. Place
    # this in another action so that the load will be scheduled after the prior
    # issued fs triggers have completed.
    trigger load_system_props_action

    # Now we can mount /data. File encryption requires keymaster to decrypt
    # /data, which in turn can only be loaded when system properties are present
    trigger post-fs-data
    trigger load_persist_props_action

    trigger firmware_mounts_complete

    trigger early-boot
    trigger boot

# mount different fs start
on fs
#INTERNAL_START
    write /proc/bootprof "INIT:Mount_START"
    mount_all /vendor/etc/fstab.mt6771 ${ro.mtkrc.path}multi_init.rc
    write /proc/bootprof "INIT:Mount_END"
#INTERNAL_END
# mount different fs end

on post-fs
    start logd
    start hwservicemanager
    start keymaster-3-0
    start keymaster_attestation-1-1
    # once everything is setup, no need to modify /
    mount rootfs rootfs / ro remount
    # Mount shared so changes propagate into child namespaces
    mount rootfs rootfs / shared rec
    # Mount default storage into root namespace
    mount none /mnt/runtime/default /storage slave bind rec

    # Make sure /sys/kernel/debug (if present) is labeled properly
    restorecon_recursive /sys/kernel/debug

    # Support legacy paths
    symlink /sdcard /storage/sdcard0

    chown system system /system/data
    mkdir /system/cache 0770 system cache
    # We restorecon /cache in case the cache partition has been reset.
    restorecon_recursive /cache

    # Same reason as /data above
    chown system cache /cache
    chmod 0770 /cache

    # This may have been created by the recovery system with odd permissions
    chown system cache /cache/recovery
    chmod 0770 /cache/recovery

    #change permissions on vmallocinfo so we can grab it from bugreports
    chown root log /proc/vmallocinfo
    chmod 0440 /proc/vmallocinfo

    #change permissions on kmsg & sysrq-trigger so bugreports can grab kthread stacks
    chown root system /proc/kmsg
    chmod 0440 /proc/kmsg
    chown root system /proc/sysrq-trigger
    chmod 0220 /proc/sysrq-trigger
    chown system log /proc/last_kmsg
    chmod 0440 /proc/last_kmsg

    # make the selinux kernel policy world-readable
    chmod 0444 /sys/fs/selinux/policy

    # create the lost+found directories, so as to enforce our permissions
    mkdir /cache/lost+found 0770 root root

#INTERNAL_START
    mkdir /cache/recovery 0770 system system
    chown system system /vendor/protect_f
    chmod 0770 /vendor/protect_f

    chown system system /vendor/protect_s
    chmod 0770 /vendor/protect_s
#INTERNAL_END

on post-fs-data
	#Thermal	
	mkdir /data/.tp/ 0775 system system

 # We chown/chmod /data again so because mount is run as root + defaults
    chown system system /system/data
    chmod 0777 /system/data
    # We chown/chmod /data again so because mount is run as root + defaults
    chown system system /data
    chmod 0771 /data
    # We restorecon /data in case the userdata partition has been reset.
    restorecon /data


    # We chown/chmod /data again so because mount is run as root + defaults

    chown root system /proc/sysrq-trigger
    chmod 0220 /proc/sysrq-trigger

    chown system system /vendor/nvcfg
    chmod 0771 /vendor/nvcfg
    restorecon_recursive /vendor/nvcfg

# create basic filesystem structure
    #mkdir /vendor/nvdata 2770 root system
    # We chown/chmod /vendor/nvdata again so because mount is run as root + defaults
    chown root system /vendor/nvdata
    chmod 0771 /vendor/nvdata
    mkdir /vendor/nvdata/media 0771 media audio

    #Create cct mount point
    mkdir /data/cct
    chown root system /data/cct
    chmod 0771 /data/cct

    # Set SELinux security contexts on upgrade or policy update.
    restorecon_recursive /vendor/nvdata

# Emulated internal storage area
    mkdir /data/media 0770 media_rw media_rw

    # Make sure we have the device encryption key
    start vold
    installkey /data

    # Start bootcharting as soon as possible after the data partition is
    # mounted to collect more data.
    mkdir /data/bootchart 0755 shell shell
    bootchart_init

    # Avoid predictable entropy pool. Carry over entropy from previous boot.
    copy /data/system/entropy.dat /dev/urandom

    # create basic filesystem structure
    mkdir /data/misc 01771 system misc
    mkdir /data/misc/bluedroid 02770 bluetooth net_bt_stack
    # Fix the access permissions and group ownership for 'bt_config.conf'
    chmod 0660 /data/misc/bluedroid/bt_config.conf
    chown bluetooth net_bt_stack /data/misc/bluedroid/bt_config.conf
    mkdir /data/misc/bluetooth 0770 system system
    mkdir /data/misc/keystore 0700 keystore keystore
    mkdir /data/misc/gatekeeper 0700 system system
    mkdir /data/misc/keychain 0771 system system
    mkdir /data/misc/net 0750 root shell
    mkdir /data/misc/radio 0770 system radio
    mkdir /data/misc/sms 0770 system radio
    mkdir /data/misc/zoneinfo 0775 system system
    mkdir /data/misc/vpn 0770 system vpn
    mkdir /data/misc/shared_relro 0771 shared_relro shared_relro
    mkdir /data/misc/systemkeys 0700 system system
    mkdir /data/misc/wifi 0770 wifi wifi
    mkdir /data/misc/wifi/sockets 0770 wifi wifi
    mkdir /data/misc/wifi/wpa_supplicant 0770 wifi wifi
    mkdir /data/misc/ethernet 0770 system system
    mkdir /data/misc/dhcp 0770 dhcp dhcp
    mkdir /data/misc/user 0771 root root
    mkdir /data/misc/perfprofd 0775 root root
    # give system access to wpa_supplicant.conf for backup and restore
    chmod 0660 /data/misc/wifi/wpa_supplicant.conf
    mkdir /data/local 0751 root root
    mkdir /data/misc/media 0700 media media
    mkdir /data/misc/vold 0700 root root

    # For security reasons, /data/local/tmp should always be empty.
    # Do not place files or directories in /data/local/tmp
    mkdir /data/local/tmp 0771 shell shell
    mkdir /data/data 0771 system system
    mkdir /data/property 0700 root root
    mkdir /data/tombstones 0771 system system
    mkdir /data/misc/media 0700 media media
    mkdir /data/misc/vold 0700 root root

    # create the lost+found directories, so as to enforce our permissions
    mkdir /data/lost+found 0770 root root

    mkdir /data/anr 0775 system system

    # symlink to bugreport storage location
    rm /data/bugreports
    symlink /data/user_de/0/com.android.shell/files/bugreports /data/bugreports

    # Create all remaining /data root dirs so that they are made through init
    # and get proper encryption policy installed
    mkdir /data/backup 0700 system system
    mkdir /data/media 0770 media_rw media_rw
    mkdir /data/ss 0700 system system
    mkdir /data/system 0775 system system
    mkdir /data/system/heapdump 0700 system system
    mkdir /data/system/users 0775 system system

    mkdir /data/system_de 0770 system system
    mkdir /data/system_ce 0770 system system

    mkdir /data/misc_de 01771 system misc
    mkdir /data/misc_ce 01771 system misc

    mkdir /data/user 0711 system system
    mkdir /data/user_de 0711 system system
    symlink /data/data /data/user/0

    mkdir /data/media 0770 media_rw media_rw
    mkdir /data/media/obb 0770 media_rw media_rw

    init_user0

    # VIA flashlessd service
    mkdir /data/flashless 0770 radio nvram
    mkdir /vendor/nvdata/md_via 0770 root nvram
    chmod 0660 /dev/ttyMT4
    chown radio radio /dev/ttyMT4
    chmod 0660 /dev/vmodem
    chown radio radio /dev/vmodem

    #VIA pppd service
    mkdir /data/pppd_via 0770 radio system

    # md32 boot
    chown root system /dev/md32
    chmod 0440 /dev/md32
    chown root system /sys/class/misc/md32/md32_mobile_log
    chmod 0660 /sys/class/misc/md32/md32_mobile_log
    write /sys/class/misc/md32/md32_boot 1

    # dhcp server
    mkdir /data/misc/dhcp 0770 dhcp dhcp
    chown dhcp dhcp /data/misc/dhcp

    # device info interface
    chmod 0440 /dev/devmap
    chown root system /dev/devmap



    #change partition permission
    exec /vendor/etc/partition_permission.sh
#INTERNAL_START
#SeLinux
    mkdir /data/ccci_cfg 0770 system radio
    restorecon /data/ccci_cfg
    restorecon_recursive /vendor/protect_f
    restorecon_recursive /vendor/protect_s

## Custom pos-fs area (START)
# Please add custom fs operation below

    # Touch Panel
    chown root diag /sys/module/tpd_setting/parameters/tpd_calmat
    chown root diag /sys/module/tpd_setting/parameters/tpd_em_debounce_time
    chown root diag /sys/module/tpd_debug/parameters/tpd_em_log
    chown root diag /sys/module/tpd_debug/parameters/tpd_em_log_to_fs

    # RTC
    mkdir /data/misc/rtc 0770 system system

    # Modem related device nodes
    mkdir /vendor/nvdata/md  0770 root system
    mkdir /vendor/nvdata/md2 0770 root system
    mkdir /vendor/nvdata/md3 0770 root system
    mkdir /data/md3	0770 root system

    chown radio radio /sys/kernel/ccci/boot

    #set mlock limit to infinate (for m4u operation)
    setrlimit 8 -1 -1

    # Sensor
    chmod 0666 /dev/hwmsensor
    chmod 0666 /dev/gyroscope
    chmod 0666 /dev/msensor
    chmod 0666 /dev/gsensor
    chmod 0666 /dev/alsps
    chmod 0666 /dev/humidity
    chmod 0666 /dev/barometer

    chown system system /dev/hwmsensor
    chown system system /dev/msensor
    chown system system /dev/gsensor
    chown radio system /dev/als_ps
    chown system system /dev/gyroscope
    chown system system /dev/barometer
    chown system system /dev/humidity
    #VideoCodec
    chmod 0666 /dev/Vcodec


    mkdir /data/amit/

    # GPIO
    chmod 0666 /dev/mtgpio

    chmod 0666 /dev/exm0

    # TTY
    # For ATCID
    chmod 0660 /dev/ttyGS0
    chown system radio /dev/ttyGS0
    chmod 0660 /dev/ttyGS1
    chown system /dev/ttyGS1
    # For BT relayer
    chown bluetooth radio /dev/ttyGS2
    chmod 0660 /dev/ttyGS2
    # For MD Logger
    chown system radio /dev/ttyGS3
    chmod 0660 /dev/ttyGS3

    #NFC
    rm /data/mtknfc_server

## Custom pos_fs area (END)
#INTERNAL_END

    # Separate location for storing security policy files on data
    mkdir /data/security 0711 system system

    # AT mode 
    mkdir /data/engineermode 0777
    copy /system/vendor/app/mcRegistry/0706000000000000000000000000004d.tlbin /data/engineermode/0706000000000000000000000000004d.tlbin
    chmod 0644 /data/engineermode/0706000000000000000000000000004d.tlbin

    # Reload policy from /data/security if present.
    setprop selinux.reload_policy 1

    # Set SELinux security contexts on upgrade or policy update.
    restorecon_recursive /data

    # If there is no fs-post-data action in the init.<device>.rc file, you
    # must uncomment this line, otherwise encrypted filesystems
    # won't work.
    # Set indication (checked by vold) that we have finished this action
    setprop vold.post_fs_data_done 1

on boot
    #USB configfs
    mkdir /dev/usb-ffs 0770 shell shell
    mkdir /dev/usb-ffs/adb 0770 shell shell
    mkdir /config/usb_gadget/g1 0770 shell shell
    write /config/usb_gadget/g1/idVendor 0x0E8D
    write /config/usb_gadget/g1/bcdDevice 0xFFFF
    write /config/usb_gadget/g1/bcdUSB 0x0200
    mkdir /config/usb_gadget/g1/strings/0x409 0770
    write /config/usb_gadget/g1/strings/0x409/manufacturer "Android"
    write /config/usb_gadget/g1/strings/0x409/product "Android"
    write /config/usb_gadget/g1/bDeviceClass 0
    write /config/usb_gadget/g1/bDeviceSubClass 0
    write /config/usb_gadget/g1/bDeviceProtocol 0
    mkdir /config/usb_gadget/g1/functions/mass_storage.usb0
    mkdir /config/usb_gadget/g1/functions/ffs.adb
    mkdir /config/usb_gadget/g1/functions/acm.gs0
    mkdir /config/usb_gadget/g1/functions/acm.gs1
    mkdir /config/usb_gadget/g1/functions/acm.gs2
    mkdir /config/usb_gadget/g1/functions/acm.gs3
    mkdir /config/usb_gadget/g1/configs/b.1 0770 shell shell
    mkdir /config/usb_gadget/g1/configs/b.1/strings/0x409 0770 shell shell
    write /config/usb_gadget/g1/configs/b.1/MaxPower 500
    symlink /config/usb_gadget/g1/configs/b.1 /config/usb_gadget/g1/os_desc/b.1
    mount functionfs adb /dev/usb-ffs/adb uid=2000,gid=2000
    chown system radio /dev/ttyGS3
    chmod 0660 /dev/ttyGS3
    setprop sys.usb.configfs 1
    setprop sys.usb.clear boot

    #VIA device property
    setprop viatel.device.asci uart.4.ttyMT
    setprop viatel.device.fls  sdio.3.ttySDIO
    setprop viatel.device.at   sdio.4.ttySDIO
    setprop viatel.device.data sdio.1.ttySDIO

# basic network init
    ifup lo
    hostname localhost
    domainname localdomain

    setprop logmuch.detect.value 10000

    #INTERNAL_START
    # Start default class, this line is very important!!
    class_start default
    #INTERNAL_END
    class_start core

on nonencrypted
    class_start main
    class_start late_start

on property:vold.decrypt=trigger_default_encryption
    start defaultcrypto

on property:vold.decrypt=trigger_encryption
    start surfaceflinger
    start encrypt

on property:sys.init_log_level=*
    loglevel ${sys.init_log_level}

on property:vold.decrypt=trigger_reset_main
    class_reset main

on property:vold.decrypt=trigger_load_persist_props
    load_persist_props
    start logd
    start logd-reinit

on property:vold.decrypt=trigger_post_fs_data
    trigger post-fs-data

on property:vold.decrypt=trigger_restart_min_framework
    class_start main

on property:vold.decrypt=trigger_restart_framework
    start nvram_daemon
    class_start main
    class_start late_start
    start permission_check

on property:vold.decrypt=trigger_shutdown_framework
    class_reset late_start
    class_reset main

# One shot invocation to deal with encrypted volume.
on defaultcrypto
    exec - root -- /system/bin/vdc --wait cryptfs mountdefaultencrypted
    # vold will set vold.decrypt to trigger_restart_framework (default
    # encryption) or trigger_restart_min_framework (other encryption)

# One shot invocation to encrypt unencrypted volumes
# mtk modification:
#   To speed up the booting in meta/factory mode, we don't encrypt the device.
#   And then handle it as 'unencrypted' state.
on encrypt
    mount ext4 /dev/block/platform/bootdevice/by-name/userdata /data noatime nosuid nodev noauto_da_alloc discard wait
    setprop ro.crypto.fake_encrypt 1
    setprop vold.post_fs_data_done 0
    trigger post-fs-data
on property:ro.crypto.fake_encrypt=1 && property:vold.post_fs_data_done=1
    trigger load_persist_props_action
    setprop ro.crypto.state unencrypted
    setprop vold.decrypt trigger_restart_framework

service ueventd /sbin/ueventd
    class core
    critical
    seclabel u:r:ueventd:s0

service console /system/bin/sh
    class core
    console
    disabled
    user shell
    group shell log readproc
    seclabel u:r:shell:s0

on property:sys.powerctl=*
    powerctl ${sys.powerctl}

on property:ro.debuggable=1
    # Give writes to anyone for the trace folder on debug builds.
    # The folder is used to store method traces.
    chmod 0773 /data/misc/trace
    start console

# adbd is controlled via property triggers in init.<platform>.usb.rc
service adbd /system/bin/adbd --root_seclabel=u:r:su:s0
    class core
    socket adbd stream 660 system system
    disabled
    seclabel u:r:adbd:s0

#INTERNAL_START
## Custom service area (START)
# Please add custom service below

service thermal_manager /vendor/bin/thermal_manager
    user root
	group system
    oneshot

service permission_check /vendor/bin/permission_check
    user root
    group system radio
    oneshot

service ccci_fsd /vendor/bin/ccci_fsd 0
    user radio
    group radio system
    oneshot

service ccci_mdinit /vendor/bin/ccci_mdinit 0
    user system
    group radio system
    oneshot

service ccci3_fsd /vendor/bin/ccci_fsd 2
    user radio
    group radio system
    oneshot

service ccci3_mdinit /vendor/bin/ccci_mdinit 2
    user system
    group radio system
    oneshot

service ccci_rpcd /vendor/bin/ccci_rpcd 0
    user radio
    group radio system
    oneshot

service nvram_daemon /vendor/bin/nvram_daemon
    class main
    user root
    group system
    oneshot

service fuelgauged /vendor/bin/fuelgauged
    class main
    user root
    group root

service mdlogger /system/bin/mdlogger
    class main
    user shell
    group shell system radio sdcard_rw inet
    disabled
    oneshot

service dualmdlogger /system/bin/dualmdlogger
    class main
    user shell
    group shell system radio sdcard_rw inet
    disabled
    oneshot

# service factory_no_image /system/bin/factory

# vivo AT mode begin
service atcid-daemon /system/bin/atcid
	user root
	group radio system

on property:sys.usb.config=adb
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor ${sys.usb.vid}
    write /sys/class/android_usb/android0/idProduct 201C
    write /sys/class/android_usb/android0/functions ${sys.usb.config}
    write /sys/class/android_usb/android0/enable 1
    start adbd
    setprop sys.usb.state ${sys.usb.config}

# vivo AT mode end

service emdlogger1 /system/bin/emdlogger1
    class main
    user shell
    group system shell radio sdcard_rw inet sdcard_r media_rw
    disabled
    oneshot

service emdlogger2 /system/bin/emdlogger2
    class main
    user shell
    group system shell radio sdcard_rw inet sdcard_r media_rw
    disabled
    oneshot

service emdlogger3 /system/bin/emdlogger3
    class main
    user shell
    group system shell radio sdcard_rw inet sdcard_r media_rw
    disabled
    oneshot

service emdlogger5 /system/bin/emdlogger5
    class main
    user shell
    group system shell radio sdcard_rw inet sdcard_r media_rw
    disabled
    oneshot

service emdlogger6 /system/bin/emdlogger6
    class main
    user shell
    group system shell radio sdcard_rw inet sdcard_r media_rw
    disabled
    oneshot

## Custom service area (END)

on property:sys.usb.clear=1 && property:sys.usb.configfs=1
    write /config/usb_gadget/g1/UDC "none"
    write /config/usb_gadget/g1/bDeviceClass 0
    write /config/usb_gadget/g1/bDeviceSubClass 0
    write /config/usb_gadget/g1/bDeviceProtocol 0
    rm /config/usb_gadget/g1/configs/b.1/f1
    rm /config/usb_gadget/g1/configs/b.1/f2
    rm /config/usb_gadget/g1/configs/b.1/f3
    rm /config/usb_gadget/g1/configs/b.1/f4
    write /sys/devices/platform/mt_usb/saving 0
    setprop sys.usb.clear 2

#mass_storage,adb,acm
on property:ro.boot.usbconfig=0 && property:sys.usb.configfs=1
    start adbd

on property:sys.usb.ffs.ready=1 && property:ro.boot.usbconfig=0 && property:sys.usb.configfs=1
    write /config/usb_gadget/g1/UDC "none"
    write /config/usb_gadget/g1/strings/0x409/serialnumber $ro.serialno
    write /config/usb_gadget/g1/configs/b.1/strings/0x409/configuration "adb_acm"
    write /config/usb_gadget/g1/idProduct 0x2006
    symlink /config/usb_gadget/g1/functions/mass_storage.usb0 /config/usb_gadget/g1/configs/b.1/f1
    symlink /config/usb_gadget/g1/functions/ffs.adb /config/usb_gadget/g1/configs/b.1/f2
    symlink /config/usb_gadget/g1/functions/acm.gs0 /config/usb_gadget/g1/configs/b.1/f3
    write /config/usb_gadget/g1/UDC "musb-hdrc"

#acm
on property:ro.boot.usbconfig=1 && property:sys.usb.configfs=1
    write /config/usb_gadget/g1/UDC "none"
    write /config/usb_gadget/g1/strings/0x409/serialnumber ""
    write /config/usb_gadget/g1/configs/b.1/strings/0x409/configuration "acm"
    write /config/usb_gadget/g1/idProduct 0x2007
    write /config/usb_gadget/g1/bDeviceClass 02
    symlink /config/usb_gadget/g1/functions/acm.gs0 /config/usb_gadget/g1/configs/b.1/f1
    write /config/usb_gadget/g1/UDC "musb-hdrc"

#singloe modem comport for factory mode
on property:sys.usb.config=gs3,dual_acm && property:sys.usb.configfs=1
    start adbd
    setprop sys.usb.clear 1

on property:sys.usb.ffs.ready=1 && property:sys.usb.config=gs3,dual_acm && \
property:sys.usb.clear=2 && property:sys.usb.configfs=1
    write /config/usb_gadget/g1/configs/b.1/strings/0x409/configuration "gs3_dual_acm"
    write /config/usb_gadget/g1/idProduct 0x202E
    write /sys/devices/platform/mt_usb/saving 1
    symlink /config/usb_gadget/g1/functions/mass_storage.usb0 /config/usb_gadget/g1/configs/b.1/f1
    symlink /config/usb_gadget/g1/functions/ffs.adb /config/usb_gadget/g1/configs/b.1/f2
    symlink /config/usb_gadget/g1/functions/acm.gs0 /config/usb_gadget/g1/configs/b.1/f3
    symlink /config/usb_gadget/g1/functions/acm.gs3 /config/usb_gadget/g1/configs/b.1/f4
    write /config/usb_gadget/g1/UDC ${sys.usb.controller}
    setprop sys.usb.state ${sys.usb.config}
    setprop sys.usb.clear 0

on property:sys.usb.config=gs1gs3,dual_acm && property:sys.usb.configfs=1
    start adbd
    setprop sys.usb.clear 1

on property:sys.usb.ffs.ready=1 && property:sys.usb.config=gs1gs3,dual_acm && \
property:sys.usb.clear=2 && property:sys.usb.configfs=1
    write /config/usb_gadget/g1/configs/b.1/strings/0x409/configuration "gs1gs3_dual_acm"
    write /config/usb_gadget/g1/idProduct 0x202F
    write /sys/devices/platform/mt_usb/saving 1
    symlink /config/usb_gadget/g1/functions/ffs.adb /config/usb_gadget/g1/configs/b.1/f1
    symlink /config/usb_gadget/g1/functions/acm.gs0 /config/usb_gadget/g1/configs/b.1/f2
    symlink /config/usb_gadget/g1/functions/acm.gs1 /config/usb_gadget/g1/configs/b.1/f3
    symlink /config/usb_gadget/g1/functions/acm.gs3 /config/usb_gadget/g1/configs/b.1/f4
    write /config/usb_gadget/g1/UDC ${sys.usb.controller}
    setprop sys.usb.state ${sys.usb.config}
    setprop sys.usb.clear 0

on property:sys.usb.config=gs1gs3 && property:sys.usb.configfs=1
    start adbd
    setprop sys.usb.clear 1

on property:sys.usb.ffs.ready=1 && property:sys.usb.config=gs1gs3 && \
property:sys.usb.clear=2 && property:sys.usb.configfs=1
    write /config/usb_gadget/g1/configs/b.1/strings/0x409/configuration "gs1gs3"
    write /config/usb_gadget/g1/idProduct 0x2029
    write /sys/devices/platform/mt_usb/saving 1
    symlink /config/usb_gadget/g1/functions/mass_storage.usb0 /config/usb_gadget/g1/configs/b.1/f1
    symlink /config/usb_gadget/g1/functions/ffs.adb /config/usb_gadget/g1/configs/b.1/f2
    symlink /config/usb_gadget/g1/functions/acm.gs1 /config/usb_gadget/g1/configs/b.1/f3
    symlink /config/usb_gadget/g1/functions/acm.gs3 /config/usb_gadget/g1/configs/b.1/f4
    write /config/usb_gadget/g1/UDC ${sys.usb.controller}
    setprop sys.usb.clear 0

#INTERNAL_END
